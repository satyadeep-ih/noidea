name: Node.js Release CI

# This workflow is triggered on every push to the 'main' branch.
# You can change 'main' to your desired branch, such as 'master'.
on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    # The job runs on the latest version of Ubuntu.
    runs-on: ubuntu-latest

    # Permissions are required for the GITHUB_TOKEN to create the release.
    permissions:
      contents: write

    steps:
      # Step 1: Check out the repository code.
      # This action fetches the repository content so the workflow can access your code.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up the Node.js environment.
      # This action installs Node.js and Yarn, making them available in the workflow's PATH.
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x' # You can change this to a specific version or range.

      # Step 3: Set up a cache for Yarn dependencies.
      # This helps speed up subsequent runs by caching the node_modules directory.
      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.yarn
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Step 4: Install the project dependencies using yarn.
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # Step 5: Build the project.
      # Replace 'yarn build' with the actual command for your project's build process.
      - name: Build project
        run: yarn build

      # Step 6: Create and push a Git tag based on the commit hash.
      # This is a prerequisite for creating a GitHub release.
      - name: Create Git Tag
        id: create_tag
        run: |
          TAG_NAME="v${{ github.run_number }}"
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag $TAG_NAME
          git push origin $TAG_NAME

      # Step 7: Create a GitHub Release.
      # This action uses the created tag to generate a new release in your repository.
      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.create_tag.outputs.tag_name }}
          name: Release ${{ steps.create_tag.outputs.tag_name }}
          body: |
            Automated release generated by GitHub Actions.
            - New release created for tag `${{ steps.create_tag.outputs.tag_name }}`.
            - This release corresponds to the commit hash `${{ github.sha }}`.
          draft: false
          prerelease: false
